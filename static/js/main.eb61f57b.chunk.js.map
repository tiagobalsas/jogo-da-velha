{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","state","squares","Array","fill","xIsNext","i","this","slice","setState","handleClick","status","renderSquare","React","Component","Game","ReactDOM","render","document","getElementById"],"mappings":"+NAIA,SAASA,EAAOC,GACd,OACE,wBAAQC,UAAU,SAASC,QAASF,EAAME,QAA1C,SACGF,EAAMG,Q,IAKPC,E,kDACJ,WAAYJ,GAAQ,IAAD,8BACjB,cAAMA,IACDK,MAAQ,CACXC,QAASC,MAAM,GAAGC,KAAK,MACvBC,SAAS,GAJM,E,+CAQnB,SAAYC,GACV,IAAMJ,EAAUK,KAAKN,MAAMC,QAAQM,QACnCN,EAAQI,GAAKC,KAAKN,MAAMI,QAAU,IAAM,IACxCE,KAAKE,SAAS,CAAEP,QAASA,EAASG,SAAUE,KAAKN,MAAMI,Y,0BAGzD,SAAaC,GAAI,IAAD,OACd,OACE,cAACX,EAAD,CACEI,MAAOQ,KAAKN,MAAMC,QAAQI,GAC1BR,QAAS,kBAAM,EAAKY,YAAYJ,Q,oBAKtC,WACE,IAAMK,EAAS,iBAAmBJ,KAAKN,MAAMI,QAAU,IAAM,KAE7D,OACE,gCACE,qBAAKR,UAAU,SAAf,SAAyBc,IACzB,sBAAKd,UAAU,YAAf,UACGU,KAAKK,aAAa,GAClBL,KAAKK,aAAa,GAClBL,KAAKK,aAAa,MAErB,sBAAKf,UAAU,YAAf,UACGU,KAAKK,aAAa,GAClBL,KAAKK,aAAa,GAClBL,KAAKK,aAAa,MAErB,sBAAKf,UAAU,YAAf,UACGU,KAAKK,aAAa,GAClBL,KAAKK,aAAa,GAClBL,KAAKK,aAAa,a,GA3CTC,IAAMC,WAkDpBC,E,4JACJ,WACE,OACE,sBAAKlB,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACG,EAAD,MAEF,sBAAKH,UAAU,YAAf,UACE,wBACA,iC,GATSgB,IAAMC,WAkBzBE,IAASC,OAAO,cAACF,EAAD,IAAUG,SAASC,eAAe,W","file":"static/js/main.eb61f57b.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return (\n    <button className='square' onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: true,\n    };\n  }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({ squares: squares, xIsNext: !this.state.xIsNext });\n  }\n\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.state.squares[i]}\n        onClick={() => this.handleClick(i)}\n      />\n    );\n  }\n\n  render() {\n    const status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n\n    return (\n      <div>\n        <div className='status'>{status}</div>\n        <div className='board-row'>\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className='board-row'>\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className='board-row'>\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  render() {\n    return (\n      <div className='game'>\n        <div className='game-board'>\n          <Board />\n        </div>\n        <div className='game-info'>\n          <div>{/* status */}</div>\n          <ol>{/* TODO */}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}